pred_fun_false_l_max <- pred_fun_true_l[pred_fun_true_l == max(pred_fun_true_l_false)]
}  else
{
pred_fun_false_l_max <- 0
}
if((length(pred_fun_true_v_false) == 0) | (pred_fun_true_l_max != pred_fun_false_l_max)) {
pred_fun_true_l_pos <- match(pred_fun_true_l_max,pred_fun_true_l)
} else {
stop()
}
#pred_fun_true_l_pos <- match_true(pred_fun_true_l_max,pred_fun_true_l)
end_index <- sum(pred_fun_true_l[1:(pred_fun_true_l_pos)])
#pred_fun_true_v_max <- pred_fun_true_v[pred_fun_true_l == max(pred_fun_true_l)]
#if (pred_fun_true_v_max) begin_index <- Position(pred_fun, in_list) else begin_index <- Position(Negate(pred_fun), in_list)
#end_index <- match(names(pred_fun_true_v_max), names(in_list) )
begin_index <- end_index - max(pred_fun_true_l_true) + 1
return(c(begin_index,end_index))
} else{
cat("No true values found.")
# return()
}
}
span(df, is.factor)
span(mtcars, is.factor)
span(mtcars, is.numeric)
span(strf(mean), is.function)
span(strf(mean), is.environment)
q()
arg_max <- function(f, x){
y <- sapply(x, f)
result <- x[y = max(y)]
}
argmax(function(x) x^2, -10:5)
arg_max(function(x) x^2, -10:5)
arg_max <- function(f, x){
y <- sapply(x, f)
result <- x[y == max(y)]
#  return(result)
}
arg_max(function(x) x^2, -10:5)
arg_max <- function(f, x){
y <- sapply(x, f)
result <- x[y == max(y)]
return(result)
}
arg_max(function(x) x^2, -10:5)
arg_max(function(x) x^2, -5:5)
?min
?Inf
smaller <- function(x, y, na.rm = FALSE){
stopifnot(length(x)==1,length(y)==1 , is.numeric(x), is.numeric(y))
if(na.rm && (is.na(x) || is.na(y))) rm_na(x,y,Inf) else min(x,y)
}
rm_na <- function(x,y,identity){
if(is.na(x) && is.na(y)) {
identity
} else if (is.na(x)) {
y
} else {
y
}
}
smaller(-3,8)
smaller(-3,8, na.rm = TRUE)
smaller(NA,8, na.rm = TRUE)
smaller(-3,NA, na.rm = TRUE)
smaller(NA,NA, na.rm = TRUE)
smaller <- function(x, y, na.rm = FALSE){
if(na.rm && (is.na(x) || is.na(y))) rm_na(x,y,Inf) else {
stopifnot(length(x)==1,length(y)==1 , is.numeric(x), is.numeric(y))
min(x,y)
}
rm_na <- function(x,y,identity){
if(is.na(x) && is.na(y)) {
identity
} else if (is.na(x)) {
y
} else {
y
}
}
smaller(-3,8)
smaller(-3,8, na.rm = TRUE)
smaller(NA,8, na.rm = TRUE)
smaller(-3,NA, na.rm = TRUE)
smaller(NA,NA, na.rm = TRUE)
}
smaller <- function(x, y, na.rm = FALSE){
if(na.rm && (is.na(x) || is.na(y))) rm_na(x,y,Inf) else {
stopifnot(length(x)==1,length(y)==1 , is.numeric(x), is.numeric(y))
min(x,y)
}
}
rm_na <- function(x,y,identity){
if(is.na(x) && is.na(y)) {
identity
} else if (is.na(x)) {
y
} else {
y
}
}
smaller(-3,8)
smaller(-3,8, na.rm = TRUE)
smaller(NA,8, na.rm = TRUE)
smaller(-3,NA, na.rm = TRUE)
smaller(NA,NA, na.rm = TRUE)
smaller <- function(x, y, na.rm = FALSE){
if(na.rm && (is.na(x) || is.na(y))) rm_na(x,y,Inf) else {
stopifnot(length(x)==1,length(y)==1 , is.numeric(x), is.numeric(y))
min(x,y)
}
}
rm_na <- function(x,y,identity){
if(is.na(x) && is.na(y)) {
identity
} else if (is.na(x)) {
y
} else {
x
}
}
smaller(-3,8)
smaller(-3,8, na.rm = TRUE)
smaller(NA,8, na.rm = TRUE)
smaller(-3,NA, na.rm = TRUE)
smaller(NA,NA, na.rm = TRUE)
smaller(x, smaller(NA, NA, na.rm = TRUE), na.rm = TRUE)
smaller(8, smaller(NA, NA, na.rm = TRUE), na.rm = TRUE)
smaller_p <- function(x, y, na.rm = FALSE){
stopifnot(length(x)==length(y), is.numeric(x), is.numeric(y))
if(lenght(x) == 0) return(numeric())
simplify2arrary(
Map(function(x,y)  smaller(x,y, na.rm = na.rm)  , x, y)
)
}
}
smaller_p <- function(x, y, na.rm = FALSE){
stopifnot(length(x)==length(y), is.numeric(x), is.numeric(y))
if(lenght(x) == 0) return(numeric())
simplify2arrary(
Map(function(x,y)  smaller(x,y, na.rm = na.rm)  , x, y)
)
}
?sample
smaller_p <- function(x, y, na.rm = FALSE){
stopifnot(length(x)==length(y), is.numeric(x), is.numeric(y))
if(lenght(x) == 0) return(numeric())
simplify2arrary(
Map(function(x,y)  smaller(x,y, na.rm = na.rm)  , x, y)
)
}
x <- c(1:10)
y <- sample(1:10,10, replace = TRUE)
x
y
smaller_p(x,y)
smaller_p <- function(x, y, na.rm = FALSE){
stopifnot(length(x)==length(y), is.numeric(x), is.numeric(y))
if(length(x) == 0) return(numeric())
simplify2arrary(
Map(function(x,y)  smaller(x,y, na.rm = na.rm)  , x, y)
)
}
smaller_p(x,y)
smaller_p <- function(x, y, na.rm = FALSE){
stopifnot(length(x)==length(y), is.numeric(x), is.numeric(y))
if(length(x) == 0) return(numeric())
simplify2array(
Map(function(x,y)  smaller(x,y, na.rm = na.rm)  , x, y)
)
}
smaller_p(x,y)
y <- sample(c(1:10,NA),10, replace = TRUE)
y
smaller_p(x,y)
smaller_p(x,y, na.rm = TRUE)
row_min <- function(x, na.rm = FALSE){
apply(x, 1, smaller, na.rm = na.rm)
}
z <- matrix(sample(1:100,20,replace = TRUE), nrow =4)
z
row_min(z)
q()
smaller <- function(x, y, na.rm = FALSE){
if(na.rm && (is.na(x) || is.na(y))) rm_na(x,y,Inf) else {
stopifnot(length(x)==1,length(y)==1 , is.numeric(x), is.numeric(y))
min(x,y)
}
}
rm_na <- function(x,y,identity){
if(is.na(x) && is.na(y)) {
identity
} else if (is.na(x)) {
y
} else {
x
}
}
smaller(-3,8)
smaller(-3,8, na.rm = TRUE)
smaller(NA,8, na.rm = TRUE)
smaller(-3,NA, na.rm = TRUE)
smaller(NA,NA, na.rm = TRUE)
smaller_p <- function(x, y, na.rm = FALSE){
stopifnot(length(x)==length(y), is.numeric(x), is.numeric(y))
if(length(x) == 0) return(numeric())
simplify2array(
Map(function(x,y)  smaller(x,y, na.rm = na.rm)  , x, y)
)
}
x <- c(1:10)
y <- sample(c(1:10,NA),10, replace = TRUE)
smaller_p(x,y)
smaller_p(x,y, na.rm = TRUE)
smaller_v <- function(xs, na.rm = TRUE){
Reduce(function(x,y) smaller_p(x,y, na.rm  = na.rm), xs)
}
smaller_v(x)
smaller_v(y)
y
row_min <- function(x, na.rm = FALSE){
apply(x, 1, smaller_v, na.rm = na.rm)
}
z <- matrix(sample(1:100,20,replace = TRUE), nrow =4)
row_min(z)
z
?paste()
q()
library(manipulate)
myPlot <- function(s) {
plot(cars$dist - mean(cars$dist), cars$speed - mean(cars$speed))
abline(0, s)
}
?manipulate
manipulate(myPlot(s), s = slider(0, 2, step = 0.1))
manipulate(myPlot, s = slider(0, 2, step = 0.1))
manipulate(myPlot(s), slider = x(0, 2, step = 0.1))
manipulate(myPlot(s), x.s = slider(0, 2, step = 0.1))
manipulate(myPlot(s), s = slider(0, 2, step = 0.1))
install.packages("rCharts")
require(devtools)
install_github('rCharts', 'ramnathv')
require(devtools)
install_github('rCharts', 'ramnathv')
?dTable
library(rCharts)
?dTable
?rCharts::dTable
dTable(airquality, sPaginationType = "full_numbers")
hist(galton$child, xlab='child height', col='lightblue',main='Histogram')
mu <- input$mu
lines(c(mu, mu), c(0, 200),col="red",lwd=5)
mse <- mean((galton$child - mu)^2)
text(63, 150, paste("mu = ", mu))
text(63, 140, paste("MSE = ", round(mse, 2)))
data(galton)
library(usingR)
library(UsingR)
data(galton)
hist(galton$child, xlab='child height', col='lightblue',main='Histogram')
mu <- input$mu
lines(c(mu, mu), c(0, 200),col="red",lwd=5)
mse <- mean((galton$child - mu)^2)
text(63, 150, paste("mu = ", mu))
text(63, 140, paste("MSE = ", round(mse, 2)))
mu <-65
hist(galton$child, xlab='child height', col='lightblue',main='Histogram')
mu <- input$mu
lines(c(mu, mu), c(0, 200),col="red",lwd=5)
mse <- mean((galton$child - mu)^2)
text(63, 150, paste("mu = ", mu))
text(63, 140, paste("MSE = ", round(mse, 2)))
q()
?order
q()
shiny::runApp('D:/coursera/dataproducts/course_shiny_project')
inTrain <- reactive(
createDataPartition(y = train$classe, p = input$id1, list = FALSE)
)
output$train <- train[inTrain(), ]
?createDataPartition
q()
shiny::runApp('D:/coursera/dataproducts/course_shiny_project')
summary(inTrain)
summary(inTrain)
inTrain
shiny::runApp('D:/coursera/dataproducts/course_shiny_project')
summary(inTrain)
class(inTrain)
inTrain
?reactive
summary(train)
summary(train[inTrain, ])
inTrain <- createDataPartition_with_P(input$id1)
inTrain <- createDataPartition_with_P(reactive({input$id1}))
inTrain <- createDataPartition_with_P(reactive({as.numeric(input$id1)}))
?createDataPartition
?numInClass
inTrain <- createDataPartition_with_P(as.numeric(input$id1))
inTrain <- createDataPartition_with_P(reactive({as.numeric(input$id1)})())
inTrain <- createDataPartition_with_P((reactive({as.numeric(input$id1)})())
)
shiny::runApp('D:/coursera/dataproducts/course_shiny_project')
shiny::runApp('D:/coursera/dataproducts/course_shiny_project')
P
P()
renderText({P()})
P <- reactive({ input$id1})
inTrain <- createDataPartition_with_P(P())
class(P)
inherits("reactive","function")
q()
shiny::runApp('D:/coursera/dataproducts/course_shiny_project')
shiny::runApp('D:/coursera/dataproducts/course_shiny_project')
shiny::runApp('D:/coursera/dataproducts/course_shiny_project')
shiny::runApp('D:/coursera/dataproducts/course_shiny_project')
shiny::runApp('D:/coursera/dataproducts/course_shiny_project')
shiny::runApp('D:/coursera/dataproducts/course_shiny_project')
shiny::runApp('D:/coursera/dataproducts/course_shiny_project')
shiny::runApp('D:/coursera/dataproducts/course_shiny_project')
shiny::runApp('D:/coursera/dataproducts/course_shiny_project')
shiny::runApp('D:/coursera/dataproducts/course_shiny_project')
shiny::runApp('D:/coursera/dataproducts/course_shiny_project')
reactive({nrow(train())})
share
share()
reactive({share()})
renderPrint({share()})
nrow_train <- reactive({nrow(train())})
output$train_nr <- renderPrint({nrow_train()})
q
shiny::runApp('D:/coursera/dataproducts/course_shiny_project')
shiny::runApp('D:/coursera/dataproducts/course_shiny_project')
shiny::runApp('D:/coursera/dataproducts/course_shiny_project')
shiny::runApp('D:/coursera/dataproducts/course_shiny_project')
reactive( {length(inTrain())})
renderPrint( {length(inTrain())})
reactive( {length(inTrain())})()
output$train_nr <- renderPrint( {length(inTrain())})
output
shiny::runApp('D:/coursera/dataproducts/course_shiny_project')
shiny::runApp('D:/coursera/dataproducts/course_shiny_project')
shiny::runApp('D:/coursera/dataproducts/course_shiny_project')
data(mtcars)
names(cars)
names(mtcars)
shiny::runApp('D:/coursera/dataproducts/course_shiny_project')
Q
shiny::runApp('D:/coursera/dataproducts/course_shiny_project')
?checkboxGroupInput
shiny::runApp('D:/coursera/dataproducts/course_shiny_project')
shiny::runApp('D:/coursera/dataproducts/course_shiny_project')
shiny::runApp('D:/coursera/dataproducts/course_shiny_project')
shiny::runApp('D:/coursera/dataproducts/course_shiny_project')
shiny::runApp('D:/coursera/dataproducts/course_shiny_project')
shiny::runApp('D:/coursera/dataproducts/course_shiny_project')
shiny::runApp('D:/coursera/dataproducts/course_shiny_project')
?formula
?lm
shiny::runApp('D:/coursera/dataproducts/course_shiny_project')
regressors
ls()
shiny::runApp('D:/coursera/dataproducts/course_shiny_project')
fit_gear <- lm(mpg  ~ ., data =  mtcars)
shiny::runApp('D:/coursera/dataproducts/course_shiny_project')
shiny::runApp('D:/coursera/dataproducts/course_shiny_project')
shiny::runApp('D:/coursera/dataproducts/course_shiny_project', display.mode = 'showcase')
fit_gear <- lm(mpg  ~ ., data =  mtcars)
fit_gear
shiny::runApp('D:/coursera/dataproducts/course_shiny_project')
ls()
fit_gear
shiny::runApp('D:/coursera/dataproducts/course_shiny_project')
ls()
0
2
q
ls()
shiny::runApp('D:/coursera/dataproducts/course_shiny_project')
unlist(label = h3("Regressors to include:"),
list("cyl" = "cyl", "disp" = "disp", "hp"= "hp", "drat" = "draft", "wt" = "wt",
"qsec" = "qsec", "vs" = "vs","am"= "am",
"gear"= "gear", "carb"= "carb"))
unlist(list("cyl" = "cyl", "disp" = "disp", "hp"= "hp", "drat" = "draft", "wt" = "wt",
"qsec" = "qsec", "vs" = "vs","am"= "am",
"gear"= "gear", "carb"= "carb"))
x <- unlist(list("cyl" = "cyl", "disp" = "disp", "hp"= "hp", "drat" = "draft", "wt" = "wt",
"qsec" = "qsec", "vs" = "vs","am"= "am",
"gear"= "gear", "carb"= "carb"))
head(mtcars[, x])
!(x %in% names(mtcars))
(x %in% names(mtcars))
x[x %in% names(mtcars)]
x[!(x %in% names(mtcars))]
shiny::runApp('D:/coursera/dataproducts/course_shiny_project')
class(x)
x
length(x)
regression_model <- function(regressors){
regressors <- unlist(regressors)
# cat(regressors)
dataforlm <- mtcars[, regressors]
fit_gear <- lm(mpg  ~ ., data =  dataforlm )
return(fit_gear)
}
debug(regression_model)
regression_model()
ls()
regressors
q
options(error= debug)
regression_model <- function(regressors){
regressors <- unlist(regressors)
# cat(regressors)
dataforlm <- mtcars[, regressors]
fit_gear <- lm(mpg  ~ ., data =  dataforlm )
return(fit_gear)
}
x
regression_model(x)
names(mtcars)
x <- unlist(list("cyl" = "cyl", "disp" = "disp", "hp"= "hp", "drat" = "drat", "wt" = "wt",
"qsec" = "qsec", "vs" = "vs","am"= "am",
"gear"= "gear", "carb"= "carb"))
x
regression_model(x)
debug(regression_model)
regression_model(x)
x
regressors
head(dataforlm)
shiny::runApp('D:/coursera/dataproducts/course_shiny_project')
shiny::runApp('D:/coursera/dataproducts/course_shiny_project')
shiny::runApp('D:/coursera/dataproducts/course_shiny_project')
shiny::runApp('D:/coursera/dataproducts/course_shiny_project')
shiny::runApp('D:/coursera/dataproducts/course_shiny_project')
shiny::runApp('D:/coursera/dataproducts/course_shiny_project')
shiny::runApp('D:/coursera/dataproducts/course_shiny_project')
shiny::runApp('D:/coursera/dataproducts/course_shiny_project')
shiny::runApp('D:/coursera/dataproducts/course_shiny_project')
shiny::runApp('D:/coursera/dataproducts/course_shiny_project')
shiny::runApp('D:/coursera/dataproducts/course_shiny_project')
shiny::runApp('D:/coursera/dataproducts/course_shiny_project')
shiny::runApp('D:/coursera/dataproducts/course_shiny_project')
shiny::runApp('D:/coursera/dataproducts/course_shiny_project')
shiny::runApp('D:/coursera/dataproducts/course_shiny_project')
?renderPlot
shiny::runApp('D:/coursera/dataproducts/course_shiny_project')
shiny::runApp('D:/coursera/dataproducts/course_shiny_project')
shiny::runApp('D:/coursera/dataproducts/course_shiny_project')
shiny::runApp('D:/coursera/dataproducts/course_shiny_project')
shiny::runApp('D:/coursera/dataproducts/course_shiny_project')
shiny::runApp('D:/coursera/dataproducts/course_shiny_project')
shiny::runApp('D:/coursera/dataproducts/course_shiny_project')
shiny::runApp('D:/coursera/dataproducts/course_shiny_project')
shiny::runApp('D:/coursera/dataproducts/course_shiny_project')
shiny::runApp('D:/coursera/dataproducts/course_shiny_project')
shiny::runApp('D:/coursera/dataproducts/course_shiny_project')
shiny::runApp('D:/coursera/dataproducts/course_shiny_project')
shiny::runApp('D:/coursera/dataproducts/course_shiny_project')
shiny::runApp('D:/coursera/dataproducts/course_shiny_project')
shiny::runApp('D:/coursera/dataproducts/course_shiny_project')
shiny::runApp('D:/coursera/dataproducts/course_shiny_project')
shiny::runApp('D:/coursera/dataproducts/course_shiny_project')
shiny::runApp('D:/coursera/dataproducts/course_shiny_project')
shiny::runApp('D:/coursera/dataproducts/course_shiny_project')
shiny::runApp('D:/coursera/dataproducts/course_shiny_project')
shiny::runApp('D:/coursera/dataproducts/course_shiny_project')
?plot
shiny::runApp('D:/coursera/dataproducts/course_shiny_project')
shiny::runApp('D:/coursera/dataproducts/course_shiny_project')
shiny::runApp('D:/coursera/dataproducts/course_shiny_project')
shiny::runApp('D:/coursera/dataproducts/course_shiny_project')
shiny::runApp('D:/coursera/dataproducts/course_shiny_project')
shiny::runApp('D:/coursera/dataproducts/course_shiny_project')
library(devtools)
find_rtools()
library(devtools)
devtools::install_github('rstudio/shinyapps')
library(shinyapps)
shinyapps::setAccountInfo(name='lfranckx', token='89A177921E2184497CE618A2C23482BD', secret='0YF69vV2wDQuLjhiwnmSo70Y1/+0o7oirnm+Bbzn')
shinyapps::setAccountInfo(name='lfranckx', token='89A177921E2184497CE618A2C23482BD', secret='0YF69vV2wDQuLjhiwnmSo70Y1/+0o7oirnm+Bbzn')
shinyapps::setAccountInfo(name='lfranckx', token='89A177921E2184497CE618A2C23482BD', secret='0YF69vV2wDQuLjhiwnmSo70Y1/+0o7oirnm+Bbzn')
shinyapps::setAccountInfo(name='lfranckx', token='89A177921E2184497CE618A2C23482BD', secret='0YF69vV2wDQuLjhiwnmSo70Y1/+0o7oirnm+Bbzn')
shinyapps::setAccountInfo(name='lfranckx', token='89A177921E2184497CE618A2C23482BD', secret='0YF69vV2wDQuLjhiwnmSo70Y1/+0o7oirnm+Bbzn')
?navbarPage
h1("My title")
shiny::runApp('D:/coursera/dataproducts/course_shiny_project')
?switch()
q()
devtools::install_github('rstudio/shinyapps')
shinyapps::setAccountInfo(name='lfranckx', token='89A177921E2184497CE618A2C23482BD', secret='0YF69vV2wDQuLjhiwnmSo70Y1/+0o7oirnm+Bbzn')
library(shinyapps)
shinyapps::deployApp('D:/coursera/dataproducts/course_shiny_project')
setwd('D:/coursera/dataproducts/course_shiny_project')
shinyapps::deployApp()
shinyapps::deployApp()
help(mtcars)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shinyapps::deployApp()
?renderPlot
shiny::runApp()
shiny::runApp()
shiny::runApp()
?plotOutput
shiny::runApp()
shinyapps::deployApp()
q()
